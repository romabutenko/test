version: '3.8'

services:
  api:
    build:
      context: .
#    image: nginx:alpine
    #    env_file:
    #      - .env
    networks:
      - app
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=Host(`test.romabutenko.ru`)
      - traefik.http.routers.nginx.service=nginx-service
      - traefik.http.services.nginx-service.loadbalancer.server.port=80

      - traefik.http.routers.nginx.entrypoints=websecure
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.tls.certresolver=letsencryptresolver

      - traefik.http.middlewares.cors.headers.customResponseHeaders.Access-Control-Allow-Origin=*
      - traefik.http.routers.nginx.middlewares=cors

      #creating middleware for headers
      - traefik.http.middlewares.frontend.headers.customresponseheaders.Access-Control-Allow-Methods=POST, GET, PUT, OPTIONS, DELETE
      - traefik.http.middlewares.frontend.headers.customresponseheaders.Access-Control-Allow-Headers=x-requested-with, Content-Type,Authorization
      #attach middleware to the frontend router
      - traefik.http.routers.nginx.middlewares=frontend

networks:
  app:
    name: app
    external: false
  traefik:
    name: traefik
    external: true
